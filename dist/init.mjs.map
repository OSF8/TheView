{"version":3,"file":"init.mjs","mappings":"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","sources":["webpack://knight-frank-the-view/./src/config.ts","webpack://knight-frank-the-view/./src/general/js/device-observer.ts","webpack://knight-frank-the-view/./src/general/js/scroll-service.ts","webpack://knight-frank-the-view/./src/general/js/subscribe-service.ts","webpack://knight-frank-the-view/./src/general/js/dynamic-styles-service.ts","webpack://knight-frank-the-view/./src/general/js/scrollbar-handler.ts","webpack://knight-frank-the-view/./src/general/js/app.ts","webpack://knight-frank-the-view/./src/init.ts"],"sourcesContent":["export enum deviceNames {\r\n    mobile = 'mobile',\r\n    tablet = 'tablet',\r\n    desktop = 'desktop',\r\n    desktopWide = 'desktop-wide',\r\n}\r\n\r\nconst viewports = {\r\n    mobile: 375,\r\n    tablet: 768,\r\n    desktop: 1024,\r\n    'desktop-wide': 1600,\r\n};\r\n\r\nexport { viewports };\r\n","import { DeviceObserver, operators } from '@deleteagency/device-observer/src/index';\r\nimport { viewports } from 'config';\r\n\r\nconst deviceObserver = new DeviceObserver(viewports);\r\n\r\nexport { deviceObserver, operators };\r\n","import throttle from 'lodash/throttle';\r\nimport { SubscribeService } from './subscribe-service';\r\n\r\nconst scrollConfig = Object.freeze({\r\n    maxDuration: 600,\r\n    minDuration: 300,\r\n    throttleTime: 100,\r\n    easings: {\r\n        linear: (t: number): number => t,\r\n        easeInOutQuart: (t: number): number =>\r\n            t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t,\r\n    },\r\n});\r\n\r\nexport interface IScrollOptions {\r\n    duration?: number;\r\n    easingFunction?: EasingFunction;\r\n}\r\n\r\ntype EasingFunction = (t: number) => number;\r\n\r\nclass ScrollService extends SubscribeService<void> {\r\n    constructor() {\r\n        super();\r\n        const handler = throttle(this.emit, scrollConfig.throttleTime);\r\n        window.addEventListener('scroll', () => handler(), { passive: true });\r\n    }\r\n\r\n    public scrollToCenter = (element: HTMLElement, options: IScrollOptions = {}) => {\r\n        const { pageYOffset } = window;\r\n        const { clientHeight } = document.documentElement;\r\n        const { top } = element.getBoundingClientRect();\r\n        const pos = pageYOffset + top - clientHeight / 2;\r\n        this.scroll(pos, options);\r\n    };\r\n\r\n    public scrollToElementsTop = (\r\n        element: HTMLElement,\r\n        offset = 0,\r\n        options: IScrollOptions = {}\r\n    ) => {\r\n        const { pageYOffset } = window;\r\n        const { top } = element.getBoundingClientRect();\r\n        const pos = top + pageYOffset + offset;\r\n        const duration = Math.max(\r\n            Math.min(Math.abs(document.documentElement.scrollTop - pos), scrollConfig.maxDuration),\r\n            scrollConfig.minDuration\r\n        );\r\n        this.scroll(pos, { duration, ...options });\r\n    };\r\n\r\n    public scroll = (pos = 0, options: IScrollOptions = {}) => {\r\n        this.animateScroll(pos, options);\r\n    };\r\n\r\n    private animateScroll(destination: number, options: IScrollOptions = {}) {\r\n        const defaultOptions: IScrollOptions = {\r\n            duration: scrollConfig.minDuration,\r\n            easingFunction: scrollConfig.easings.easeInOutQuart,\r\n        };\r\n        const { duration, easingFunction } = { ...defaultOptions, ...options };\r\n        const start = window.pageYOffset;\r\n        const startTime = 'now' in window.performance ? performance.now() : new Date().getTime();\r\n\r\n        const documentHeight = Math.max(\r\n            document.body.scrollHeight,\r\n            document.body.offsetHeight,\r\n            document.documentElement.clientHeight,\r\n            document.documentElement.scrollHeight,\r\n            document.documentElement.offsetHeight\r\n        );\r\n        const windowHeight =\r\n            window.innerHeight ||\r\n            document.documentElement.clientHeight ||\r\n            document.getElementsByTagName('body')[0].clientHeight;\r\n        const destinationOffset = destination;\r\n        const destinationOffsetToScroll = Math.round(\r\n            documentHeight - destinationOffset < windowHeight\r\n                ? documentHeight - windowHeight\r\n                : destinationOffset\r\n        );\r\n\r\n        if (!('requestAnimationFrame' in window)) {\r\n            window.scroll(0, destinationOffsetToScroll);\r\n            return;\r\n        }\r\n\r\n        function scroll() {\r\n            const now = 'now' in window.performance ? performance.now() : new Date().getTime();\r\n            const time = Math.min(1, (now - startTime) / (duration as number));\r\n            const timeFunctionResult = (easingFunction as EasingFunction)(time);\r\n            window.scroll(\r\n                0,\r\n                Math.ceil(timeFunctionResult * (destinationOffsetToScroll - start) + start)\r\n            );\r\n\r\n            if (Math.ceil(window.pageYOffset) === destinationOffsetToScroll) {\r\n                return;\r\n            }\r\n\r\n            requestAnimationFrame(scroll);\r\n        }\r\n\r\n        scroll();\r\n    }\r\n}\r\n\r\nexport const scrollService = new ScrollService();\r\n","export class SubscribeService<T> {\r\n    private _subscribers: { [id: string]: (serviceArgument?: T) => void } = {};\r\n\r\n    public subscribe = (id: string, cb: (serviceArgument?: T) => void) => {\r\n        this._subscribers[id] = cb;\r\n    };\r\n\r\n    public unsubscribe = (id: string): void => {\r\n        if (id && this._subscribers[id]) delete this._subscribers[id];\r\n    };\r\n\r\n    public emit = (id?: string, serviceArgument?: T): void => {\r\n        Object.keys(this._subscribers).forEach((key) => {\r\n            if (key !== id) this._subscribers[key](serviceArgument);\r\n        });\r\n    };\r\n}\r\n","class DynamicStylesService {\r\n    protected parent = document.head;\r\n\r\n    private tag = document.createElement('style');\r\n\r\n    private elements: { [id: string]: { selector: string; css: string } } = {};\r\n\r\n    constructor() {\r\n        this.parent.appendChild(this.tag);\r\n    }\r\n\r\n    setStyles = ({ id, selector, css }: { id: string; selector: string; css: string }): void => {\r\n        this.elements[id] = { selector, css };\r\n        this._updateTag();\r\n    };\r\n\r\n    _updateTag = (): void => {\r\n        const { elements } = this;\r\n        this.tag.innerHTML = Object.keys(elements)\r\n            .map((key) => `${elements[key].selector} { ${elements[key].css} }`)\r\n            .join(' ');\r\n    };\r\n\r\n    remove = (id: string): void => {\r\n        if (this.elements[id]) {\r\n            delete this.elements[id];\r\n            this._updateTag();\r\n        }\r\n    };\r\n}\r\n\r\nexport const dynamicStylesService = new DynamicStylesService();\r\n","export const hasScrollBar = () =>\r\n    document.body.scrollHeight > document.documentElement.clientHeight;\r\n\r\nexport const getScrollbarSize = () => {\r\n    const scrollDiv = document.createElement('div');\r\n    scrollDiv.style.cssText =\r\n        'width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;';\r\n    document.body.appendChild(scrollDiv);\r\n    const scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n    document.body.removeChild(scrollDiv);\r\n    return scrollbarSize;\r\n};\r\n","import { dcFactory } from '@deleteagency/dc';\r\nimport { nanoid } from 'nanoid';\r\nimport { dynamicStylesService } from 'general/js/dynamic-styles-service';\r\nimport { deviceObserver } from 'general/js/device-observer';\r\nimport { getScrollbarSize } from 'general/js/scrollbar-handler';\r\nimport { scrollService } from 'general/js/scroll-service';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        appConfig: string;\r\n    }\r\n}\r\n\r\nclass App {\r\n    public config = window.appConfig || '';\r\n\r\n    private id = nanoid(10);\r\n\r\n    public init(): void {\r\n        dcFactory.init();\r\n        this._setScrollbarSize();\r\n        this._watchViewport();\r\n        this._watchScroll();\r\n    }\r\n\r\n    private _watchViewport(): void {\r\n        this._setViewportSize();\r\n        if (!window.location.href.match('EPiServer/CMS')) {\r\n            deviceObserver.subscribeOnResize(this._setViewportSize);\r\n        } else {\r\n            document.body.classList.add('in-cms');\r\n        }\r\n    }\r\n\r\n    private _setViewportSize = (): void => {\r\n        dynamicStylesService.setStyles({\r\n            id: this.id + 'v',\r\n            selector: '.body',\r\n            css: `--viewport-height: ${window.innerHeight}px;`,\r\n        });\r\n    };\r\n\r\n    private _setScrollbarSize = (): void => {\r\n        dynamicStylesService.setStyles({\r\n            id: this.id + 's',\r\n            selector: '.body',\r\n            css: `--scrollbar: ${getScrollbarSize()}px;`,\r\n        });\r\n    };\r\n\r\n    private _watchScroll = (): void => {\r\n        let position = window.pageYOffset;\r\n        scrollService.subscribe(this.id + 'scroll', () => {\r\n            if (position <= window.pageYOffset) {\r\n                document.documentElement.classList.add('is-scrolled-down');\r\n            } else {\r\n                document.documentElement.classList.remove('is-scrolled-down');\r\n            }\r\n            if (window.innerHeight + window.pageYOffset + 50 >= document.body.clientHeight) {\r\n                document.documentElement.classList.add('is-end-of-page');\r\n            } else {\r\n                document.documentElement.classList.remove('is-end-of-page');\r\n            }\r\n\r\n            position = window.pageYOffset;\r\n        });\r\n    };\r\n}\r\n\r\nexport const app = new App();\r\n","import { app } from 'general/js/app';\r\n\r\napp.init();\r\n"],"names":["deviceNames","deviceObserver","mobile","tablet","desktop","scrollConfig","Object","freeze","maxDuration","minDuration","throttleTime","easings","linear","t","easeInOutQuart","ScrollService","constructor","super","scrollToCenter","element","options","pageYOffset","window","clientHeight","document","documentElement","top","getBoundingClientRect","pos","this","scroll","scrollToElementsTop","offset","duration","Math","max","min","abs","scrollTop","animateScroll","handler","emit","addEventListener","passive","destination","defaultOptions","easingFunction","start","startTime","performance","now","Date","getTime","documentHeight","body","scrollHeight","offsetHeight","windowHeight","innerHeight","getElementsByTagName","destinationOffset","destinationOffsetToScroll","round","time","timeFunctionResult","ceil","requestAnimationFrame","scrollService","SubscribeService","_subscribers","subscribe","id","cb","unsubscribe","serviceArgument","keys","forEach","key","dynamicStylesService","parent","head","tag","createElement","elements","setStyles","selector","css","_updateTag","innerHTML","map","join","remove","appendChild","getScrollbarSize","scrollDiv","style","cssText","scrollbarSize","offsetWidth","clientWidth","removeChild","config","appConfig","_setViewportSize","_setScrollbarSize","_watchScroll","position","classList","add","init","_watchViewport","location","href","match"],"sourceRoot":""}